# https://taskfile.dev

version: '3'

vars:
  GREETING: Hello, World!

tasks:
  default:
    cmds:
      - echo "{{.GREETING}}"

  build:
    desc: build the project
    deps:
      - build-lib
    cmds:
      - npm install
      - npm run build

  build-lib:
    desc: build the library
    dir: ../
    cmds:
      - npm run build

  setup:
    desc: setup workspace
    cmds:
      - go install github.com/google/go-containerregistry/cmd/crane@latest
      - npm install -g @anthropic-ai/claude-code
      - go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      - |
        PROTOC_VERSION=$(curl -s "https://api.github.com/repos/protocolbuffers/protobuf/releases/latest" | grep -Po '"tag_name": "v\K[0-9.]+')
        curl -Lo protoc.zip "https://github.com/protocolbuffers/protobuf/releases/latest/download/protoc-${PROTOC_VERSION}-linux-x86_64.zip"
        sudo unzip protoc.zip -d /usr/local
        sudo unzip -q protoc.zip bin/protoc 'include/*' -d /usr/local
        sudo chmod a+x /usr/local/bin/protoc
      - which protoc

  clean:
    desc: clean up workspace
    cmds:
      - rm -r allure-results

  run:
    desc: run test cases
    cmds:
      - npm run test

  allure:dockerBuild:
    desc: build allure report
    cmds:
      - docker build -t allure-serve ./allure

  allure:generate:
    desc: generate allure report
    cmds:
      - sudo rm -r allure-report || true
      - docker run --rm -v "$(pwd)/allure-results:/app/allure-results" -v "$(pwd)/allure-report:/app/allure-report" allure-generator generate

  allure:serve:
    cmds:
      - task: allure:dockerRun

  allure:dockerRun:  # テスト結果をマウントしてサーバー起動
    dir: example/
    deps:
      - task: allure:dockerStop
      - task: allure:dockerBuild
    cmds:
      - docker run --rm --name allure-serve -p 8083:8083 -v $(pwd)/allure-results:/app/allure-results allure-serve

  allure:dockerStop:
    desc: stop allure report server
    cmds:
      - docker stop allure-serve || true
      - docker rm allure-serve || true

  stub:build:
    desc: build stub server
    dir: tools/echo-server
    deps:
      - task: proto:generate
    cmds:
      - CGO_ENABLED=0 GOOS=linux go build -o build/app .

  stub:run:
    desc: run stub server
    deps:
      - task: stub:build
    cmds:
      - docker compose build
      - docker compose up

  stub:down:
    desc: stop stub server
    cmds:
      - docker compose down

  stub:runEchoServer:
    desc: run stub server
    dir: tools/echo-server
    cmds:
      - go run main.go

  proto:generate:
    desc: generate protobuf code for echo server
    dir: tools/echo-server
    cmds:
      - protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative echo.proto

